let huffman=function(){const n=new Array(256),t=new Array(256),e=new Array(256),o=new Array(512),l=[];let r=null,f=0,i="",c="",a=0,u=0,$=0,p=0,s=0,h=0,d=null;function w(){let n=0;x("信源符号的频次：\n"),x("xi    value\tfreq\n"),x("-------------------------\n");for(let e=0;e<256;e++)s+=t[e],0!==t[e]&&x(`x${++n} \t${e}\t${t[e]}\n`);f=n,x("-------------------------\n"),x(`频次合计:\t${s}\n\n`)}function g(){for(let e=0;e<256;e++)n[e]=roundFractional(t[e]/s,6);a=entropy(n),function(){x("信源符号的概率分布：\n"),x("xi    value\tp\n"),x("-------------------------\n");for(let e=0,o=0;e<256;e++)0!==t[e]&&x(`x${++o} \t${e}\t${n[e]}\n`);x("-------------------------\n"),x(`熵:\t\t${a} bit\n`),x(`剩余度:\t\t${redundancy(a,f)}\n\n`)}()}function m(){x("start\tlen\n"),x("----------------\n"),l.forEach(n=>x(`${n.pos}\t${n.len}\n`)),x("----------------\n")}function y(){x("i\tpos1\tlen\tpos2\tdistance\n"),x("----------------------------------------\n");for(let n=0;n<l.length-1;n++)x(`${n}\t${l[n].pos}\t${l[n].len}\t${l[n+1].pos}\t${l[n+1].pos-l[n].pos-l[n].len}\n`);x("----------------------------------------\n\n")}function A(n,t){const e=document.createElement("a"),o=new Blob([n],{type:"application/huffman-binary"});c=t||i.split(".")[0]+".hfm",e.href=URL.createObjectURL(o),e.download=c,e.click(),URL.revokeObjectURL(e.href)}function x(n){d.append(n)}function F(){s=0,t.forEach(n=>s+=n);for(let e=0;e<256;e++)n[e]=roundFractional(t[e]/s,6);!function(){let e=entropy(n);x("信源符号的概率分布：\n"),x("xi    value\tp\n"),x("-------------------------\n");for(let e=0,o=0;e<256;e++)0!==t[e]&&x(`x${++o} \t${e}\t${n[e]}\n`);x("-------------------------\n"),x(`熵:\t\t${e} bit\n`),x(`剩余度:\t\t${redundancy(e,f)}\n\n`)}()}function b(){x("Huffman 树：\n"),x("xi\tpos\tweight\tl\tr\tp\n"),x("---------------------------------------------\n");for(let n=0,t=0;n<512;n++)0!==o[n].w&&x(`x${++t}\t${n}\t${o[n].w}\t${o[n].l}\t${o[n].r}\t${o[n].p}\n`);x("---------------------------------------------\n\n")}function H(){const n=o[511].w;let t=1/0,e=511,l=511;for(let l=0;l<n;l++)o[l].w<t&&0!==o[l].w&&0===o[l].p&&(t=o[l].w,e=l);t=1/0;for(let r=0;r<n;r++)o[r].w<t&&0!==o[r].w&&0===o[r].p&&r!==e&&(t=o[r].w,l=r);return x(`s1 = ${e}  \ts2 = ${l}  \ts3 = ${n}\n`),{s1:e,s2:l}}function C(){for(let n=0;n<256;n++){if(0===o[n].p)continue;let t=n,l=o[n],r="";for(;0!==l.p;)r+=o[l.p].l===t?"1":"0",t=l.p,l=o[t];e[n]=r.split("").reverse().join("")}!function(){let o=0;x("码字：\n"),x("xi\tpos\tfreq\tlen\tCode\n"),x("---------------------------------------------\n");for(let l=0,r=0;l<256;l++)0!==t[l]&&(o+=n[l]*e[l].length,x(`x${++r}\t${l}\t${t[l]}\t${e[l].length}\t${e[l]}\n`));x("---------------------------------------------\n"),x(`平均码长：\t${roundFractional(o,3)}\n`),x(`编码效率：\t${roundFractional(100*a/o,2)} %\n`),x(`理论压缩率：\t${roundFractional(100*o/8,2)} %\n\n`)}()}function E(){let n=new ArrayBuffer(u),o=new Uint8Array(n);o.fill(0),function(n){if(n[0]="Hfm".charCodeAt(0),n[1]="Hfm".charCodeAt(1),n[2]="Hfm".charCodeAt(2),0!==p)if(1!==p){if(2===p){n[3]=192,n[4]=l.length;for(let e=0,o=5;e<l.length;e++){n[o++]=l[e].pos,n[o++]=l[e].len;for(let r=0;r<l[e].len;r++,o++)n[o]=t[l[e].pos+r]}}}else{n[3]=160,n[4]=f;for(let e=0,o=5;e<256;e++)0!==t[e]&&(n[o++]=e,n[o++]=t[e])}else{n[3]=128,n[4]=f;for(let e=0;e<256;e++)n[e+5]=t[e]}}(o);let a="",s=h,d="";for(let n=0;n<u;n++)for(a+=e[r[n]];a.length>=8;)d=a.substr(0,8),o[s++]=parseInt(d,2),a=a.slice(8,a.length);""!==a&&(s++,o[4]+=a.length,d=(a+"00000000").substr(0,8),o[s++]=parseInt(d)),$=s,A(n.slice(0,$)),x("压缩结果：\n"),x("---------------------------------------------\n"),x(`原始文件：\t${i}\t${u} 字节\n`),x(`目标文件：\t${c}\t${$} 字节\n`),x("---------------------------------------------\n"),x(`压缩率：\t${roundFractional(100*$/u,2)} %\n`)}return{compress:function(s,R,U){d=U,function(l,f){r=l,u=l.length,i=f,n.fill(0),t.fill(0),e.fill("");for(let n=0;n<512;n++)o[n]={l:0,r:0,p:0,w:0}}(s,R),r.forEach(n=>t[n]++),w(),g(),h=function(){let n=t.map(n=>0===n?"x":1).join(""),e=0,o=n.match(/\d+/g);for(let t=0,e=0,r=0;t<o.length;t++,e+=r)e=n.indexOf("1",e),r=o[t].length,l.push({pos:e,len:r});x("原始行程信息：\n"),m(),x("\n原始行程分析：\n"),y();for(let n=0;n<l.length-1;n++)e=l[n+1].pos-l[n].pos-l[n].len,e<3&&(l[n].len+=e+l[n+1].len,l.splice(n+1,1),n--);let r=0;r=l.reduce((n,t)=>n+t.len,0),x("合并后行程信息：\n"),m(),x(`行程段数：${l.length}\n频次总数：${r}\n\n`),r+=2*l.length,x("合并后行程分析：\n"),y();let i=[256,2*f,r],c=Math.min(...i)+"Hfm".length+2;return p=i.indexOf(c-5),x(`文件头部存储开销：${c} 字节\n\n`),c}(),u-u*a/8<h?function(){$="Hfm".length+1+u;const n=new ArrayBuffer($),t=new Uint8Array(n);t[0]="Hfm".charCodeAt(0),t[1]="Hfm".charCodeAt(1),t[2]="Hfm".charCodeAt(2),t[3]=0;for(let n=4;n<$;n++)t[n]=r[n-4];A(n)}():(function(){let n=0;if(t.forEach(t=>n=t>n?t:n),n<256)return!1;let e=n/256+1;for(let n=0,o=0;n<256;n++)0!==t[n]&&(o=roundFractional(t[n]/e,0),t[n]=0===o?1:o);return w(),!0}()&&F(),function(){for(let n=0;n<256;n++)o[n].w=t[n];o[511].p=-1,o[511].w=256,x("初始化的 "),b()}(),function(){let n=0;for(x("信源缩减过程：\n");;){let{s1:t,s2:e}=H();if(511===e)break;n=o[511].w++,o[n].l=t,o[n].r=e,o[n].w=o[t].w+o[e].w,o[t].p=n,o[e].p=n}x("\n生成的 "),b()}(),C(),E(),function(){let o=0,l=0,r=0;x("\n\t\t-- REPORT --\n\n");for(let l=0;l<256;l++)0!==t[l]&&(o++,r+=n[l]*e[l].length);x("信源：\n"),x("---------------------------------------------\n"),x(`符号个数：\t${o}\n`),l=entropy(n),x(`熵：\t\t${l} bit\n`),x(`剩余度：\t\t${roundFractional(1-l/Math.log2(o),2)}\n\n`),x("编码：\n"),x("---------------------------------------------\n"),r=r<=0?8:r,x(`平均码长：\t${roundFractional(r,2)} bit\n`),x(`编码效率：\t${roundFractional(100*l/r,2)} %\n`),x(`理论压缩率：\t${roundFractional(100*r/8,2)} %\n\n`),x("压缩：\n"),x("---------------------------------------------\n"),x(`原始文件：\t${i}\t${u} 字节\n`),x(`目标文件：\t${c}\t${$} 字节\n`),x(`节省空间：\t${u-$} 字节\n`),x(`压缩率：\t\t${roundFractional(100*$/u,2)}%\n`)}())}}}();